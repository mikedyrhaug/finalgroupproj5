---
title: "Avocados ðŸ¥‘ðŸ“‰ðŸ“ˆ"
author: "Mike"
date: "`r Sys.Date()`"
output: html_document
editor_options: 
  chunk_output_type: console
---

# Avocado case study

* Data originally from [kaggle](https://www.kaggle.com/neuromusic/avocado-prices)
* I moved the data here on google sheets for reading:
  * https://docs.google.com/spreadsheets/d/18H9H6f-51o32ihVGB46VO4sMU_Vxn62RVnLc0cPHijo/edit?usp=sharing

```{r message=FALSE}
# load needed libraries here
library(fpp3)
library(seasonal)
```

## Data prep

Read in the data and do some initial cleaning. The cleaning steps here are to drop irrelevant columns and make column names consistent about casing and word separators.

```{r}
data_url <- "https://docs.google.com/spreadsheets/d/18H9H6f-51o32ihVGB46VO4sMU_Vxn62RVnLc0cPHijo/export?format=csv"
ts <- read.csv(data_url)
head(ts, 3)
```

```{r}
keep_cols <- c(
  "Date", "AveragePrice",
  "Total.Volume", "type", "region"
)

new_names <- c(
  "date", "avg_price",
  "volume", "type", "region"
)

# Only keep the columns found in the keep_cols vector
ts <- ts[,keep_cols]

# Rename the columns using new_names
names(ts) <- new_names

# Display the first 3 rows of the df
head(ts, 3)
```

Further cleaning and convert to a `tsibble` for time series analysis.  The cleaning here was done to summarise the weekly data to be at a monthly level.

```{r}
# summarise data at a monthly level
# keep information about organic vs regular separate
ts <- ts %>%
  mutate(month = yearmonth(date)) %>%
  group_by(month, type) %>%
  summarise(
    avg_price = mean(avg_price),
    volume = sum(volume)
  )

# Convert the data.frame to a tsibble
ts <- tsibble(ts, index = month, key = type)

# Display the first 3 rows of the tsibble
head(ts, 3)
```

Visualize both the `volume` and the `avg_price`.

* Does there appear to be a trend to any of the series?
* Does there appear to be seasonality to any of the series?

Create follow-up visuals as needed to answer the above questions.

```{r}
autoplot(ts, avg_price)
autoplot(ts, volume)

autoplot(ts[ts$type == 'organic',], volume)

gg_season(ts, avg_price)
gg_subseries(ts, avg_price)

organic <- ts[ts$type == 'organic',]
conventional <- ts[ts$type == 'conventional',]

autoplot(organic, volume)
gg_season(organic, volume)
gg_subseries(organic, volume)

autoplot(conventional, volume)
gg_season(conventional, volume)
gg_subseries(conventional, volume)
```

## Time series decomposition

### An aside for intuition

I swear this is related to our time series topics.

Below I've:

* created a vector of values
* subtracted the mean from each value

Don't look at the value of `mean(vals)`:

* What was the mean of the values?
* How far away is the first value from the mean?

```{r}
vals <- c(48, 46, 51, 43, 53, 50, 50, 54, 51, 54)

# DONT LOOK AT THE VALUE OF mean(vals)
mean_diff <- vals - mean(vals)
mean_diff
```

Below I've:

* created a vector of values
* divided each value by the mean

Don't look at the value of `mean(vals)`:

* What was the mean of the values?
* How far away is the first value from the mean?
  * Specifically, interpret what the first value of `mean_div` means.

```{r}
vals <- c(54, 55, 60, 63, 53, 53, 55, 54, 51, 52)

# DONT LOOK AT THE VALUE OF mean(vals)
mean_div <- vals / mean(vals)
mean_div <- round(mean_div, 2)
mean_div
```

### Classical decomp and interpretation

Reference: https://otexts.com/fpp3/classical-decomposition.html

#### Additive

Perform `classical_decomposition()` on the `avg_price` using an `'additive'` model.

* How is the trend calculated when doing time series decomposition?
* What amount of the price is accounted for by the seasonal component?
  * Specifically, what do the values on the seasonal component axis mean?

```{r}
organic  %>% 
  model(
    classical_decomposition(avg_price)
  ) %>% 
  components() %>% 
  autoplot()
```

#### Multiplicative

Perform `classical_decomposition()` on the `avg_price` using a `'multiplicative'` model.

* What amount of the price is accounted for by the seasonal component?
  * Specifically, what do the values on the seasonal component axis mean?

```{r}
organic  %>% 
  model(
    classical_decomposition(avg_price, 'multiplicative')
  ) %>% 
  components() %>% 
  autoplot()
```

### X11 and SEATS decomp

Perform X11 decomposition

* X11 reference: https://otexts.com/fpp3/methods-used-by-official-statistics-agencies.html#x-11-method
* How does this differ from the output of traditional decomp?

```{r}

```

Perform SEATS decomposition

* SEATS reference: https://otexts.com/fpp3/methods-used-by-official-statistics-agencies.html#seats-method
* The plot title doesn't explicitly say multiplicative or additive because it's got some intricacies that make neither completely true, BUT! judging by the seasonal axis, does it look more like additive or multiplicative?
* Any additional things to comment on here?

```{r}

```

## Additional exploration

* Filter down to just `'organic'` avocados
* Plot the `ACF()` using up to 4 years for `lag_max`
  * Interpret what you see

```{r}
autoplot(ACF(organic, avg_price, lag_max = 48))
```

* Use `gg_lag()` to further investigate what you saw in `ACF()`
  * make sure to specify `lags` to only investigate lags that seemed interesting in `ACF()`'s output

```{r}

```
